

----STARTUP---- (1 November 2020 16:57:18) as C:\Users\Alejo\Desktop\Smalltalk\windows64\1er Parcial v1.image!


!classRemoval: #PointsPortableObject stamp: 'AS 11/1/2020 16:57:40'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #NoPointsPortableObject stamp: 'AS 11/1/2020 16:57:41'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObject stamp: 'AS 11/1/2020 16:57:41'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Door stamp: 'AS 11/1/2020 16:57:41'!
StageObject subclass: #Door
	instanceVariableNames: 'state key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #StageObject stamp: 'AS 11/1/2020 16:57:42'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PlayableCharacter stamp: 'AS 11/1/2020 16:57:42'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'name backpack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorState stamp: 'AS 11/1/2020 16:57:42'!
Object subclass: #DoorState
	instanceVariableNames: 'door'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Backpack stamp: 'AS 11/1/2020 16:57:42'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorTest stamp: 'AS 11/1/2020 16:57:43'!
TestCase subclass: #DoorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #BackpackTest stamp: 'AS 11/1/2020 16:57:43'!
TestCase subclass: #BackpackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

----SNAPSHOT----(1 November 2020 16:57:57) 1er Parcial v1.image priorSource: 17486920!

TestCase subclass: #TatetiTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiTest category: #'Ta-Te-Ti' stamp: 'AS 11/1/2020 16:58:48'!
TestCase subclass: #TatetiTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/1/2020 17:00:23'!
Object subclass: #Tateti
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!TatetiTest methodsFor: 'no messages' stamp: 'AS 11/1/2020 16:59:50'!
test01
|tateti|
	tateti:=Tateti createGame.
	self assert tateti isEmpty.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:00:50' prior: 50878213!
test01
|tateti|
	tateti:=Tateti createGame.
	self assert: (tateti isEmpty).! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:00:56'!
ERROR!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:00:56'!
ERROR!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:00:57'!
ERROR!
!Tateti class methodsFor: 'instance creation' stamp: 'AS 11/1/2020 17:01:06'!
createGame
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeCreateGame! !
!Tateti class methodsFor: 'instance creation' stamp: 'AS 11/1/2020 17:01:22' prior: 50878231!
createGame
	^self new initializeGame! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:01:30'!
ERROR!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:01:30'!
ERROR!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 17:01:49'!
initializeGame
	self shouldBeImplemented.! !
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 17:01:56' prior: 50878247!
initializeGame! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:02:06'!
ERROR!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:02:06'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:02:33'!
isEmpty
	self shouldBeImplemented.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:02:43' prior: 50878260!
isEmpty
	^true.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:02:47'!
PASSED!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:02:52'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:04:39'!
test02
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self deny: (tateti isEmpty).! !

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:04:46'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:04:46'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:04:46'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:05:09'!
addPieceAt: aPoint 
	self shouldBeImplemented.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:06:04' prior: 50878285!
addPieceAt: aPoint ! !

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:06:08'!
FAILURE!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:06:08'!
ERROR!

Object subclass: #Tateti
	instanceVariableNames: 'pieces'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/1/2020 17:06:42'!
Object subclass: #Tateti
	instanceVariableNames: 'pieces'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 17:08:15' prior: 50878252!
initializeGame
pieces:=Bag new.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:08:39' prior: 50878264!
isEmpty
	^pieces isEmpty.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:09:13' prior: 50878290!
addPieceAt: aPoint 
pieces add: aPoint.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:09:21'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:09:25'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:13:54'!
test03
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error description: Tateti alreadyTakenErrorDescription. ! !

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:13:59'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:13:59'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:13:59'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 17:14:27'!
alreadyTakenErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 17:15:26' prior: 50878341!
alreadyTakenErrorDescription
	^'canNotAddPiceInAlreadyTakenLocation'.! !

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:15:31'!
FAILURE!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:15:31'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 17:16:01' prior: 50878346!
alreadyTakenErrorDescription
	^'canNotAddPieceInAlreadyTakenLocation'.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:18:00' prior: 50878317!
addPieceAt: aPoint 
(pieces includes: aPoint) ifTrue:[
					pieces add: aPoint.
					]		! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:18:37' prior: 50878362!
addPieceAt: aPoint 
(pieces includes: aPoint) ifTrue:[
					
					]ifFalse:
				[
					pieces add: aPoint.
				]		! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:18:44' prior: 50878368!
addPieceAt: aPoint 
(pieces includes: aPoint) ifTrue:[
					
					]ifFalse:
					[
					pieces add: aPoint.
					]		! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:19:29' prior: 50878375!
addPieceAt: aPoint 
(pieces includes: aPoint) ifTrue:[	
						self error: self class alreadyTakenErrorDescription.				
					]ifFalse:
					[
					pieces add: aPoint.
					]		! !

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:19:44'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:19:47'!
PASSED!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:19:50'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:19:50'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:19:50'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:22:15'!
test04
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:22:22'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:22:22'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:22:22'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 17:23:09'!
outsideOfBoundsErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 17:23:39' prior: 50878416!
outsideOfBoundsErrorDescription
	^'can not add piece outside the bounds of the board'.! !

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:23:43'!
FAILURE!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:23:43'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:25:17' prior: 50878382!
addPieceAt: aPoint 

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:26:42' prior: 50878432!
addPieceAt: aPoint 

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:26:47'!
PASSED!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:26:52'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:26:52'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:26:52'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:26:52'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:27:09'!
test05
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 3@4.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:28:49' prior: 50878440!
addPieceAt: aPoint 

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	aPoint y>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:29:02'!
PASSED!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:29:04'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:29:04'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:29:04'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:29:04'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:29:04'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:29:25'!
test06
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:29:53' prior: 50878470!
addPieceAt: aPoint 

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	aPoint y>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						
	aPoint y<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 17:29:56'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:30:16'!
test07
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 0@2.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:30:57' prior: 50878505!
addPieceAt: aPoint 

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	aPoint y>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	
	aPoint x<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						
	aPoint y<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 17:31:03'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:32:13' prior: 50878543!
addPieceAt: aPoint 

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	aPoint y>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	
	aPoint x<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						
	aPoint y<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:33:02'!
checkPointIsInBounds: aPoint

	aPoint x>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	aPoint y>3 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
	
	aPoint x<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				].
						
	aPoint y<1 ifTrue:[	
							self error: self class outsideOfBoundsErrorDescription.				]! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:33:02' prior: 50878579!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.! !

a:=2@3!

a inspect.!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:40:41' prior: 50878599!
checkPointIsInBounds: aPoint

	[aPoint between: 1@1  and: 3@3 ] ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:40:47'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:40:47'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:40:47'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:40:47'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:40:48'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 17:40:48'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 17:40:48'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:41:07'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:41:07'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:43:01'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:43:14'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:45:06' prior: 50878625!
checkPointIsInBounds: aPoint
! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:45:09'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:45:09'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:45:09'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:45:09'!
FAILURE!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:45:09'!
FAILURE!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 17:45:09'!
FAILURE!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 17:45:09'!
FAILURE!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:45:23' prior: 50878657!
checkPointIsInBounds: aPoint

	[aPoint between: 1@1  and: 3@3 ] ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		
! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:45:43' prior: 50878677!
checkPointIsInBounds: aPoint

	(aPoint between: 1@1  and: 3@3 ) ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		
! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 17:45:46'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:48:55'!
test08
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 0@2.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:56:26' prior: 50878708!
test08
|tateti|
	tateti:=Tateti createGame.
	self assert: tateti nextPlayerIsX.! !

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:56:32'!
ERROR!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:56:32'!
ERROR!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:56:32'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:56:46'!
nextPlayerIsX
	self shouldBeImplemented.! !

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/1/2020 17:58:28'!
Object subclass: #Tateti
	instanceVariableNames: 'pieces nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 17:58:25' prior: 50878728!
nextPlayerIsX
	^nextPlayer=$X.! !

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:58:34'!
FAILURE!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:58:34'!
ERROR!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 17:59:17' prior: 50878309!
initializeGame
pieces:=Bag new.
nextPlayer =$X.! !

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:59:30'!
FAILURE!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:59:30'!
FAILURE!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 17:59:30'!
ERROR!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 18:00:30' prior: 50878749!
initializeGame
pieces:=Bag new.
nextPlayer :=$X.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:00:33'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:01:26'!
test09
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	self assert: tateti nextPlayerIsY.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:01:40' prior: 50878782!
test09
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	self assert: tateti nextPlayerIsO.! !

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:01:43'!
ERROR!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:01:43'!
ERROR!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:01:43'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:01:58'!
nextPlayerIsO
	self shouldBeImplemented.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:02:23' prior: 50878802!
nextPlayerIsO
	nextPlayer=$O! !

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:02:28'!
ERROR!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:02:29'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:02:56' prior: 50878807!
nextPlayerIsO
	^nextPlayer=$O! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:04:23' prior: 50878615!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.
	
	self changePlayerTurn.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:06:00'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:06:00'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:06:00'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:06:01'!
ERROR!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:06:07'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:06:07'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:06:07'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:06:07'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:07:58' prior: 50878820!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.
	
	self nextPlayerIsO ifTrue: [nextPlayer:=$X] ifFalse: [nextPlayer:=$O]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:08:01'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:08:02'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:08:02'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:08:02'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:08:47' prior: 50878870!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.
	
	self nextPlayerIsX ifTrue: [nextPlayer:=$O]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:08:49'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:08:49'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:08:49'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:08:49'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:08:49'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:08:50'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:08:50'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:08:50'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:08:50'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:09:29'!
test10
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	self assert: tateti nextPlayerIsX.! !

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:09:33'!
FAILURE!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:09:33'!
FAILURE!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:09:33'!
ERROR!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:09:40'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:09:50' prior: 50878902!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
						
	pieces add: aPoint.
	
	self nextPlayerIsX ifTrue: [nextPlayer:=$O] ifFalse: [nextPlayer:=$X]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:09:52'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:14:10' prior: 50878933!
test10
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	self deny: tateti isOver.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:09:29' prior: 50878983!
test10
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	self assert: tateti nextPlayerIsX.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:14:51'!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	self assert: tateti nextPlayerIsX.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:15:09' prior: 50878998!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	self assert: tateti isOver.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:15:19' prior: 50879006!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	self deny: tateti isOver.! !

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:15:24'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:15:24'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:15:24'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:15:38'!
isOver
	self shouldBeImplemented.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:15:59' prior: 50879028!
isOver
	^false.! !

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:16:08'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:19:43'!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@3.
	
	self assert: tateti isOver.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:20:01'!
FAILURE!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:20:01'!
FAILURE!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:20:01'!
ERROR!

!methodRemoval: TatetiTest #test12 stamp: 'AS 11/1/2020 18:22:07'!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@3.
	
	self assert: tateti isOver.!

!methodRemoval: TatetiTest #test11 stamp: 'AS 11/1/2020 18:22:13'!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	self deny: tateti isOver.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:25:14'!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	tateti addPieceAt: 3@1.
	
	self assert: tateti nextPlayerIsX.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:26:02' prior: 50879069!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPiece.! !

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:26:10'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:26:10'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:26:10'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 18:26:38'!
playerCanNotAddFourthPiece
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 18:28:01' prior: 50879100!
playerCanNotAddFourthPiece
	^'A player can not add four pieces to the board'.! !

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:28:09'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:28:09'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:28:09'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 18:29:22'!
playerCanNotAddFourthPieceErrorDescription
	^'A player can not add four pieces to the board'.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:29:22' prior: 50879081!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPieceErrorDescription.! !

!methodRemoval: Tateti class #playerCanNotAddFourthPiece stamp: 'AS 11/1/2020 18:29:22'!
playerCanNotAddFourthPiece
	^'A player can not add four pieces to the board'.!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:31:04' prior: 50878949!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(pieces size >6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						
						
	pieces add: aPoint.
	
	
	
	self nextPlayerIsX ifTrue: [nextPlayer:=$O] ifFalse: [nextPlayer:=$X]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:31:07'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:31:07'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:31:07'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:31:08'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:08'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:08'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:08'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:24'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:24'!
FAILURE!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:24'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:31:46' prior: 50879142!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	(pieces includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(pieces size >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						
						
	pieces add: aPoint.
	
	
	
	self nextPlayerIsX ifTrue: [nextPlayer:=$O] ifFalse: [nextPlayer:=$X]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:31:49'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:34:32'!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti playerCanNotMoveAnotherPlayersPieceErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:34:37'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:34:37'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:34:37'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 18:34:48'!
playerCanNotMoveAnotherPlayersPieceErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 18:35:27' prior: 50879253!
playerCanNotMoveAnotherPlayersPieceErrorDescription
	^'A player can not move a piece that another player added to the board'! !

!methodRemoval: Tateti #isOver stamp: 'AS 11/1/2020 18:35:45'!
isOver
	^false.!

Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/1/2020 18:36:08'!
Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:37:24' prior: 50878313!
isEmpty
	^(piecesX isEmpty) and: (piecesO isEmpty).! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:43:52' prior: 50879193!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size)+(piecesO size) >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						

	self nextPlayerIsX ifTrue: [
		nextPlayer:=$O.
		piecesX add: aPoint.
		] ifFalse: [
		nextPlayer:=$X.
		piecesO add: aPoint.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:43:59' prior: 50879286!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size)+(piecesO size) >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						

	self nextPlayerIsX ifTrue: [
		nextPlayer:=$O.
		piecesX add: aPoint.
		] ifFalse: [
			piecesO add: aPoint.
		nextPlayer:=$X.
	
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:44:10' prior: 50879304!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size)+(piecesO size) >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						

	self nextPlayerIsX ifTrue: [
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:44:14'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:44:14'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:44:14'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:44:14'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:44:14'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:44:14'!
ERROR!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 18:44:41' prior: 50878760!
initializeGame
piecesX:=Bag new.
piecesO:=Bag new.
nextPlayer :=$X.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:44:44'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:45:02'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:45:31'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:46:42'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:47:09'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:48:21' prior: 50879233!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	tateti movePieceAt: 2@1 to: 3@1.
	
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti playerCanNotMoveAnotherPlayersPieceErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:48:24'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:48:24'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:48:24'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:48:33' prior: 50879408!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti playerCanNotMoveAnotherPlayersPieceErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 18:48:54'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:52:10'!
movePieceAt: aPoint to:  anotherPoint

	self checkPointIsInBounds: aPoint.
	self checkPointIsInBounds: anotherPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size)+(piecesO size) >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						

	self nextPlayerIsX ifTrue: [
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:55:00' prior: 50879322!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	self nextPlayerIsX ifTrue: [
		
		(piecesX includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		(piecesO includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:55:24' prior: 50879465!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		(piecesX includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:56:02' prior: 50879488!
addPieceAt: aPoint 

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:56:45' prior: 50879445!
movePieceAt: aPoint to:  anotherPoint

	self checkPointIsInBounds: aPoint.
	self checkPointIsInBounds: anotherPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifFalse:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size)+(piecesO size) >=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
						

	self nextPlayerIsX ifTrue: [
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:01:04' prior: 50879533!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesO includes: aPoint)) ifTrue:[	
							self error: self class playerCanNotMoveAnotherPlayersPieceErrorDescription .				].

		] ifFalse: [
		
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:02:22' prior: 50879553!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesO includes: aPoint)) ifTrue:[	
							self error: self class positionDoesNotHaveAValidPieceToMove.				].

		] ifFalse: [
		
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:03:17' prior: 50879430!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoesNotHaveAValidPieceToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 18:48:33' prior: 50879576!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti playerCanNotMoveAnotherPlayersPieceErrorDescription.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 19:04:29'!
positionDoenNotHaveAValidPieceToMoveErrorDescription
	^'A player can not move a piece that another player added to the board'! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:04:29' prior: 50879590!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!methodRemoval: Tateti class #playerCanNotMoveAnotherPlayersPieceErrorDescription stamp: 'AS 11/1/2020 19:04:29'!
playerCanNotMoveAnotherPlayersPieceErrorDescription
	^'A player can not move a piece that another player added to the board'!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 19:05:07' prior: 50879603!
positionDoenNotHaveAValidPieceToMoveErrorDescription
	^'ThereIsNotAValidPieceToMoveInThatPosition'! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:05:37' prior: 50879565!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].

		] ifFalse: [
		
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:05:56' prior: 50879637!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:08'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:06:28' prior: 50879610!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	tateti movePieceAt: 2@1 to: 3@1.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:30'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:30'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:30'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:06:42' prior: 50879691!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	tateti movePieceAt: 2@2 to: 3@1.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:44'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:06:51' prior: 50879713!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:06:55'!
PASSED!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 19:22:23' prior: 50878421!
outsideOfBoundsErrorDescription
	^'can not add piece or move piece to outside the bounds of the board'.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:27:57' prior: 50879649!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		
		self checkPointIsInBounds: anotherPoint.				
		((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) ifTrue:
			[
				
			]				
		
		]

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		]. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:28:54'!
test13
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:31:26' prior: 50879774!
test13
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@2 to: 2@1.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:31:42'!
ERROR!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:31:42'!
ERROR!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:31:42'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 19:31:59'!
DestinationNotANeighbourErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 19:34:07' prior: 50879808!
DestinationNotANeighbourErrorDescription
	^'DestinationIsNotANeighbour'! !

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:34:11'!
FAILURE!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:34:11'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:36:28' prior: 50879753!
movePieceAt: aPoint to:  anotherPoint


	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		
		self checkPointIsInBounds: anotherPoint.				
		((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) ifTrue:
			[
				
			]ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
				]				
		
		]

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:39:20' prior: 50879824!
movePieceAt: aPoint to:  anotherPoint

	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		].

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
						
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:39:23'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:40:22' prior: 50879788!
test13
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:40:24'!
FAILURE!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:40:24'!
FAILURE!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:40:24'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:43:57' prior: 50879848!
movePieceAt: aPoint to:  anotherPoint

	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
						
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 19:44:34'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:44:35'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:48:35'!
test14
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  [tateti isOver.] ! !

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:48:40'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:48:40'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:48:40'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:13'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:13'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:13'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:49:21' prior: 50879979!
test14
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. ! !

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:28'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:28'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:49:28'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:49:39'!
isOver
	self shouldBeImplemented.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:50:00' prior: 50880014!
isOver
	^false.! !

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:50:06'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 19:50:58'!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver. ! !

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:51:04'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:51:04'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:51:04'!
ERROR!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 19:56:12' prior: 50879367!
initializeGame
piecesX:=Array new.
piecesO:=Array new.
nextPlayer :=$X.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 19:56:14'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:56:14'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:56:24'!
ERROR!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:56:24'!
ERROR!

----End fileIn of C:\Users\Alejo\Desktop\Smalltalk\windows64\Packages\TerseGuide.pck.st----!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 19:58:01' prior: 50880040!
initializeGame
piecesX:=OrderedCollection new.
piecesO:=OrderedCollection new.
nextPlayer :=$X.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 19:58:05'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:58:05'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:58:05'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 19:58:05'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:00:52' prior: 50880018!
isOver
	|winningPositions|
	
	winningPositions := OrderedCollection new.
	winningPositions add: (OrderedCollection with: 1@1 with: 1@2 with: 1@3)! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:04:22' prior: 50883062!
isOver
	|winningPositions|
	
	winningPositions := OrderedCollection new.
	winningPositions add: (OrderedCollection with: 1@1 with: 1@2 with: 1@3).
	
	! !
!Tateti methodsFor: 'initialization' stamp: 'AS 11/1/2020 20:04:38' prior: 50883018!
initializeGame
piecesX:=Bag new.
piecesO:=Bag new.
nextPlayer :=$X.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:08:16' prior: 50883070!
isOver
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:08:20'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:08:21'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:08:34'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:08:38'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:09:16' prior: 50883084!
isOver
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:09:17'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:09:17'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:09:18'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:09:18'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:09:18'!
FAILURE!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:09:18'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:09:37' prior: 50883132!
isOver
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:11:05' prior: 50883180!
isOver
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:12:13' prior: 50883194!
isOver
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:12:17'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/1/2020 20:18:42'!
winningPositions
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:19:27' prior: 50883213!
isOver
	|winningPositions|

	winningPositions := self winningPositions .
	
	^(winningPositions includes: piecesX) or: (winningPositions includes: piecesO)
	
	! !

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:19:30'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:19:30'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:20:42'!
hasPlayerXWon

	^(self winningPositions includes: piecesX).
	
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:20:52'!
hasPlayerOWon

	^(self winningPositions includes: piecesO).
	
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:21:51' prior: 50883289!
isOver
	^(self hasPlayerOWon) or: (self hasPlayerXWon)
	
	! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:21:54'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:30:20' prior: 50880024!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti hasPlayerXWon . ! !

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:30:25'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:32:04'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti hasPlayerOWon . ! !

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 20:32:07'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:35:46' prior: 50883311!
isOver
	self nextPlayerIsX ifTrue: [
				^(self hasPlayerOWon)
			] ifFalse:[
			 	^(self hasPlayerXWon)
			]
	
	! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:35:53'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:35:53'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:35:53'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:35:53'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:35:53'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 20:35:54'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:36:24' prior: 50883350!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:36:33' prior: 50883362!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 20:36:35'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:37:32'!
test17CanNotAddOrMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:37:43' prior: 50883474!
test17CanNotAddOrMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:38:20'!
test17CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:38:33'!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test17CanNotAddOrMovePieceInFinishedGame stamp: 'AS 11/1/2020 20:38:38'!
test17CanNotAddOrMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:38:51' prior: 50883510!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:48:19' prior: 50883496!
test17CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddPiecesToFinishedGameErrorDescription. ! !

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:48:25'!
ERROR!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:48:25'!
ERROR!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:48:25'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 20:48:36'!
canNotAddPiecesToFinishedGameErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 20:49:17' prior: 50883565!
canNotAddPiecesToFinishedGameErrorDescription
	^'Pieces can not be added to a game that is already over'! !

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:49:22'!
FAILURE!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:49:22'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:57:59' prior: 50879512!
addPieceAt: aPoint 

	

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 20:58:37' prior: 50883584!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:59:38'!
FAILURE!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 20:59:38'!
PASSED!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:59:38'!
FAILURE!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 20:59:38'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 21:00:26'!
canNotAddOrMovePiecesInFinishedGameErrorDescription
	^'Pieces can not be added to a game that is already over'! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:00:26' prior: 50883543!
test17CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: Tateti class #canNotAddPiecesToFinishedGameErrorDescription stamp: 'AS 11/1/2020 21:00:26'!
canNotAddPiecesToFinishedGameErrorDescription
	^'Pieces can not be added to a game that is already over'!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/1/2020 21:00:39' prior: 50883674!
canNotAddOrMovePiecesInFinishedGameErrorDescription
	^'Pieces can not be added or moved in a game that is already over'! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:01:36' prior: 50883605!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
		piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:01:38'!
PASSED!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:01:38'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:03:00' prior: 50883531!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription.. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:03:37'!
PASSED!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:03:37'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:03:49' prior: 50883775!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:04:22' prior: 50883832!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:04:24'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:07:52' prior: 50879921!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
		

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
						
		]. ! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test14 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:07:58'!
PASSED!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:07:58'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:08:07' prior: 50883847!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	tateti movePieceAt: 3@1 to: 3@2 
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:08'!
ERROR!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:08'!
ERROR!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:08'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:08:17' prior: 50883940!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	tateti movePieceAt: 3@1 to: 3@2 .
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:18'!
ERROR!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:18'!
ERROR!

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:19'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:08:28' prior: 50883965!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!testRun: #TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:08:29'!
PASSED!

----SNAPSHOT----(1 November 2020 21:17:18) 1er Parcial v1.image priorSource: 17489357!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:18:57'!
test19CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test18CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:18:57'!
test18CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:19:09'!
test18CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test17CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:19:09'!
test17CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:19:15'!
test17
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test16 stamp: 'AS 11/1/2020 21:19:15'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:19:41'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test15 stamp: 'AS 11/1/2020 21:19:41'!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:19:52'!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. ! !

!methodRemoval: TatetiTest #test14 stamp: 'AS 11/1/2020 21:19:52'!
test14
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:20:35'!
test13CanNotMovePieceToNotNieghbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:21:40'!
test13CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!methodRemoval: TatetiTest #test13CanNotMovePieceToNotNieghbourLocation stamp: 'AS 11/1/2020 21:21:41'!
test13CanNotMovePieceToNotNieghbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:22:16'!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:23:01'!
test13CanNotMovePieceToOutsideOfBoundsLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription .! !

!methodRemoval: TatetiTest #test13CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/1/2020 21:23:06'!
test13CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:23:15' prior: 50884174!
test13CanNotMovePieceToOutsideOfBoundsLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 0@1.]  raise: Error description: Tateti outsideOfBoundsErrorDescription .! !

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/1/2020 21:23:19'!
PASSED!

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test13 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test15 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test17 stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test18CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!testRun: #TatetiTest #test19CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:23:23'!
PASSED!

!methodRemoval: TatetiTest #test13 stamp: 'AS 11/1/2020 21:23:40'!
test13
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:26:50'!
test20CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test19CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:26:50'!
test19CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:26:57'!
test19CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test18CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:26:57'!
test18CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:27:04'!
test18
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test17 stamp: 'AS 11/1/2020 21:27:04'!
test17
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:27:10'!
test17
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test16 stamp: 'AS 11/1/2020 21:27:10'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:27:17'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. ! !

!methodRemoval: TatetiTest #test15 stamp: 'AS 11/1/2020 21:27:17'!
test15
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:30:20'!
test15CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!methodRemoval: TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/1/2020 21:30:20'!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:30:52'!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!methodRemoval: TatetiTest #test15CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/1/2020 21:30:52'!
test15CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:32:46'!
test15piecesCenteredInTheBordersCannotMoveDiagonally
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@2 to: 2@1.]  raise: Error description: Tateti DestinationNotANeighbourErrorDescription.! !

!testRun: #TatetiTest #test01 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test02 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test03 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test04 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test05 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test06 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test07 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test08 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test09 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test10 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test11 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/1/2020 21:32:54'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test17 stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test18 stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/1/2020 21:32:55'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/1/2020 21:32:55'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:42:51'!
test21PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:48:22' prior: 50884510!
test21PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:57:02' prior: 50884525!
test21PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 3@1 to: 2@2.
	
	self assert: tateti isOver.! !

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:57:06'!
ERROR!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:57:06'!
ERROR!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:57:06'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 21:58:09' prior: 50884540!
test21PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:58:12'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:58:12'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 21:58:12'!
ERROR!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:01:46'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:01:46'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:01:46'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:05:34' prior: 50883865!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
						
		]. ! !

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:05:46'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:05:46'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:05:46'!
ERROR!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:09:17'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:09:28'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:09:28'!
FAILURE!

!testRun: #TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:09:28'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:11:29'!
test22PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !

!methodRemoval: TatetiTest #test21PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:11:29'!
test21PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:16:35'!
test21MovingPiecesChangeCurrentPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:17:49'!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !

!methodRemoval: TatetiTest #test21MovingPiecesChangeCurrentPlayer stamp: 'AS 11/1/2020 22:17:49'!
test21MovingPiecesChangeCurrentPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:20:29' prior: 50884697!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:20:56' prior: 50884722!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .
	
	tateti movePieceAt: 2@1 to: 1@1.
	
	self assert: tateti nextPlayerIsX .! !

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/1/2020 22:21:00'!
FAILURE!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/1/2020 22:21:00'!
FAILURE!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/1/2020 22:21:00'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:22:06' prior: 50884599!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			nextPlayer:=$x.
						
						
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:22:11' prior: 50884759!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			nextPlayer:=$X.
						
						
		]. ! !

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/1/2020 22:22:16'!
PASSED!

!testRun: #TatetiTest #test22PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:22:21'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:23:05'!
test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereX
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:23:10'!
test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.! !

!methodRemoval: TatetiTest #test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereX stamp: 'AS 11/1/2020 22:23:15'!
test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereX
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.!

!methodRemoval: TatetiTest #test22PiecesIndeedMoveCreatingGameOverConfigurations stamp: 'AS 11/1/2020 22:23:21'!
test22PiecesIndeedMoveCreatingGameOverConfigurations
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti isOver.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:25:19' prior: 50884850!
test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .! !

!testRun: #TatetiTest #test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/1/2020 22:25:23'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:26:48'!
test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@3 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:26:53'!
ERROR!

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:26:53'!
ERROR!

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:26:54'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:27:05' prior: 50884907!
test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:27:09'!
FAILURE!

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:27:09'!
FAILURE!

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:27:09'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:32:12' prior: 50884795!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			piecesO remove: aPoint.
			piecesO add: anotherPoint.			
			nextPlayer:=$X.
						
						
		]. ! !

!testRun: #TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:32:44'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:35:09'!
test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .! !

!methodRemoval: TatetiTest #test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/1/2020 22:35:09'!
test22PiecesIndeedMoveCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:35:28'!
test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!methodRemoval: TatetiTest #test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:35:28'!
test23PiecesIndeedMoveCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:46:22'!
test23MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:46:35'!
test24MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!methodRemoval: TatetiTest #test23MovingPiecesLeavesOriginSpotFree stamp: 'AS 11/1/2020 22:46:35'!
test23MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:56:53' prior: 50885030!
test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@3 to: 2@3.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/1/2020 22:56:55'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:57:09' prior: 50885073!
test24MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/1/2020 22:57:23' prior: 50885121!
test24MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginSpotFree stamp: 'AS 11/1/2020 22:57:27'!
PASSED!

----SNAPSHOT----(1 November 2020 22:58:34) 1er Parcial v1.image priorSource: 17675409!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:06:15'!
test24MovingPiecesLeavesOriginalSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !

!methodRemoval: TatetiTest #test24MovingPiecesLeavesOriginSpotFree stamp: 'AS 11/2/2020 00:06:15'!
test24MovingPiecesLeavesOriginSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:09:30'!
test01gameIsCreatedWithoutPiecesOnBoard
|tateti|
	tateti:=Tateti createGame.
	self assert: (tateti isEmpty).! !

!methodRemoval: TatetiTest #test01 stamp: 'AS 11/2/2020 00:09:30'!
test01
|tateti|
	tateti:=Tateti createGame.
	self assert: (tateti isEmpty).!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:10:20'!
test02CanAddPiecesToBoardAndBoardIsNotEmpty
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self deny: (tateti isEmpty).! !

!methodRemoval: TatetiTest #test02 stamp: 'AS 11/2/2020 00:10:20'!
test02
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self deny: (tateti isEmpty).!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:11:10'!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error description: Tateti alreadyTakenErrorDescription. ! !

!methodRemoval: TatetiTest #test03 stamp: 'AS 11/2/2020 00:11:10'!
test03
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error description: Tateti alreadyTakenErrorDescription. !

----SNAPSHOT----(2 November 2020 00:11:16) 1er Parcial v1.image priorSource: 17712015!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:12:32'!
test04CanNotAddPiecesOnTheBottomOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test04 stamp: 'AS 11/2/2020 00:12:32'!
test04
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:13:05'!
test04CanNotAddPiecesBelowTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test04CanNotAddPiecesOnTheBottomOfTheBoard stamp: 'AS 11/2/2020 00:13:05'!
test04CanNotAddPiecesOnTheBottomOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:13:25'!
test05CanNotAddPieceOnTheRightOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 3@4.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test05 stamp: 'AS 11/2/2020 00:13:25'!
test05
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 3@4.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:13:55'!
test06CanNotAddPieceOnTheTopOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test06 stamp: 'AS 11/2/2020 00:13:55'!
test06
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:14:03'!
test04CanNotAddPieceBelowTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test04CanNotAddPiecesBelowTheBoard stamp: 'AS 11/2/2020 00:14:03'!
test04CanNotAddPiecesBelowTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:14:53'!
test07CanNotAddPieceAboveOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 0@2.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test07 stamp: 'AS 11/2/2020 00:14:53'!
test07
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 0@2.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:15:14'!
test06CanNotAddPieceOnTheLeftOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #test06CanNotAddPieceOnTheTopOfTheBoard stamp: 'AS 11/2/2020 00:15:14'!
test06CanNotAddPieceOnTheTopOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error description: Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:15:39'!
test08PlayerXStartsPlaying
|tateti|
	tateti:=Tateti createGame.
	self assert: tateti nextPlayerIsX.! !

!methodRemoval: TatetiTest #test08 stamp: 'AS 11/2/2020 00:15:39'!
test08
|tateti|
	tateti:=Tateti createGame.
	self assert: tateti nextPlayerIsX.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:16:00'!
test09PlayerOPlaysAfterX
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	self assert: tateti nextPlayerIsO.! !

!methodRemoval: TatetiTest #test09 stamp: 'AS 11/2/2020 00:16:00'!
test09
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	self assert: tateti nextPlayerIsO.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:16:26'!
test10PlayerXPlaysAfterO
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	self assert: tateti nextPlayerIsX.! !

!methodRemoval: TatetiTest #test10 stamp: 'AS 11/2/2020 00:16:26'!
test10
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	self assert: tateti nextPlayerIsX.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:17:38'!
test11PlayersCanNotAddMoreThan3PiecesOnBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPieceErrorDescription.! !

!methodRemoval: TatetiTest #test11 stamp: 'AS 11/2/2020 00:17:38'!
test11
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPieceErrorDescription.!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:19:55' prior: 50883709!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
		
	
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan3PiecesOnBoard stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test17 stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test18 stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 00:20:00'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 00:20:00'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:20:08' prior: 50885405!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].

	self nextPlayerIsX ifTrue: [
		
		piecesX size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [
			piecesO size >=3  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].
	
		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:23:31' prior: 50885502!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size + piecesO size)>=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	self nextPlayerIsX ifTrue: [
		
		
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [

		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan3PiecesOnBoard stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test12 stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test16 stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test17 stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test18 stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 00:23:35'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 00:23:36'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 00:23:36'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 00:23:36'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 00:23:36'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 00:23:36'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:23:56'!
test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPieceErrorDescription.! !

!methodRemoval: TatetiTest #test11PlayersCanNotAddMoreThan3PiecesOnBoard stamp: 'AS 11/2/2020 00:23:56'!
test11PlayersCanNotAddMoreThan3PiecesOnBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error description: Tateti playerCanNotAddFourthPieceErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:25:46'!
test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!methodRemoval: TatetiTest #test12 stamp: 'AS 11/2/2020 00:25:46'!
test12
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error description: Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:29:02'!
test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayerAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. ! !

!methodRemoval: TatetiTest #test16 stamp: 'AS 11/2/2020 00:29:02'!
test16
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:29:14'!
test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. ! !

!methodRemoval: TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayerAreInARow stamp: 'AS 11/2/2020 00:29:14'!
test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayerAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.

	self deny:  tateti isOver. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:29:48'!
test17GameIsFinishedWhen3PiecesOfTheSamePlayerAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test17 stamp: 'AS 11/2/2020 00:29:48'!
test17
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:30:59'!
test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test17GameIsFinishedWhen3PiecesOfTheSamePlayerAreInARow stamp: 'AS 11/2/2020 00:30:59'!
test17GameIsFinishedWhen3PiecesOfTheSamePlayerAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:31:21'!
test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test18 stamp: 'AS 11/2/2020 00:31:21'!
test18
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:38:07'!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:39:32' prior: 50885778!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error description: Tateti NotEnoughPiecesToMoveErrorDescription.! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:39:37'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:39:37'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:39:37'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 00:39:58'!
NotEnoughPiecesToMoveErrorDescription
	self shouldBeImplemented.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 00:44:26' prior: 50885812!
NotEnoughPiecesToMoveErrorDescription
	^'Can not move when there are less than 6 pieces'! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:44:45'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:44:49'!
PASSED!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:46:01' prior: 50884961!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((piecesX size + piecesO size)<6)  ifTrue:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			piecesO remove: aPoint.
			piecesO add: anotherPoint.			
			nextPlayer:=$X.
						
						
		]. ! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:46:08'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:46:17' prior: 50885790!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti movePieceAt: 1@1 to: 1@2.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error description: Tateti NotEnoughPiecesToMoveErrorDescription.! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:46:20'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:46:20'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:46:20'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:46:31' prior: 50885876!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error description: Tateti NotEnoughPiecesToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:51:33' prior: 50885900!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:51:36'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:51:47' prior: 50885912!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  []  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:51:51'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:51:51'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:51:51'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:51:57' prior: 50885928!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:18' prior: 50884310!
test19CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error withMessageText:  Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:29' prior: 50884446!
test15piecesCenteredInTheBordersCannotMoveDiagonally
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@2 to: 2@1.]  raise: Error withMessageText: Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:33' prior: 50884417!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error withMessageText:  Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:37' prior: 50884203!
test13CanNotMovePieceToOutsideOfBoundsLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 0@1.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:42' prior: 50885652!
test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error withMessageText:  Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:52:50' prior: 50885623!
test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	
	self should:  [tateti addPieceAt: 3@1.]  raise: Error withMessageText: Tateti playerCanNotAddFourthPieceErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:00' prior: 50885308!
test07CanNotAddPieceAboveOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 0@2.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:05' prior: 50885324!
test06CanNotAddPieceOnTheLeftOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 2@0.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:10' prior: 50885259!
test05CanNotAddPieceOnTheRightOfTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 3@4.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:17' prior: 50885291!
test04CanNotAddPieceBelowTheBoard
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: 4@3.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:21' prior: 50885205!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error withMessageText:  Tateti alreadyTakenErrorDescription. ! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:53:44' prior: 50885831!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			piecesO remove: aPoint.
			piecesO add: anotherPoint.			
			nextPlayer:=$X.
						
						
		]. ! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 00:53:48'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 00:53:49'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 00:53:49'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 00:53:49'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 00:53:49'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:53:49'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:53:49'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:53:49'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:54:20'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:54:20'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:54:20'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:54:55' prior: 50885950!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 2@2 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:55:01'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:55:01'!
FAILURE!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:55:01'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 00:55:34' prior: 50886100!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((piecesX size + piecesO size)<6)  ifTrue:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	self nextPlayerIsX ifTrue: [
		
		((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
		piecesX remove: aPoint.
		piecesX add: anotherPoint.
		nextPlayer:=$O.

		] ifFalse: [
		
			((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].
						
			piecesO remove: aPoint.
			piecesO add: anotherPoint.			
			nextPlayer:=$X.
						
						
		]. ! !

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 00:55:38'!
PASSED!

Object subclass: #TatetiStates
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiStates category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:09:09'!
Object subclass: #TatetiStates
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiStates subclass: #GameIsOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #GameIsOver category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:09:52'!
TatetiStates subclass: #GameIsOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiStates subclass: #NextPlayerIsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #NextPlayerIsX category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:10:02'!
TatetiStates subclass: #NextPlayerIsX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiStates subclass: #NextPlayerIsO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #NextPlayerIsO category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:10:06'!
TatetiStates subclass: #NextPlayerIsO
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

Object subclass: #TatetiStates
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiStates category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:12:46'!
Object subclass: #TatetiStates
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classRenamed: #TatetiStates as: #TatetiState stamp: 'AS 11/2/2020 01:13:00'!
Smalltalk renameClassNamed: #TatetiStates as: #TatetiState!

Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO tatetiState nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:13:32'!
Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO tatetiState nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO state nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 01:13:40'!
Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO state nextPlayer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!TatetiState methodsFor: 'no messages' stamp: 'AS 11/2/2020 01:15:05'!
addPieceAt: aPoint
	self shouldBeImplemented ! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:15:35' prior: 50886426!
addPieceAt: aPoint
	self subclassResponsibility ! !
!GameIsOver methodsFor: 'no messages' stamp: 'AS 11/2/2020 01:16:21' overrides: 50886431!
addPieceAt: aPoint
	self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .	! !
!Tateti methodsFor: 'initialization' stamp: 'AS 11/2/2020 01:18:22' prior: 50883078!
initializeGame
piecesX:=Bag new.
piecesO:=Bag new.
state:=NextPlayerIsX new.
nextPlayer :=$X.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:21:41' prior: 50885526!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size + piecesO size)>=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	self nextPlayerIsX ifTrue: [
		
		
		piecesX add: aPoint.
		nextPlayer:=$O.
		] ifFalse: [

		piecesO add: aPoint.
		nextPlayer:=$X.
		]. ! !
!NextPlayerIsO methodsFor: 'no messages' stamp: 'AS 11/2/2020 01:23:52' overrides: 50886431!
addPieceAt: aPoint	! !
!NextPlayerIsX methodsFor: 'no messages' stamp: 'AS 11/2/2020 01:24:02' overrides: 50886431!
addPieceAt: aPoint! !

----SNAPSHOT----(2 November 2020 01:24:30) 1er Parcial v1.image priorSource: 17714282!
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:27:49' prior: 50886470 overrides: 50886431!
addPieceAt: aPoint	

		tateti addToPieceO: aPoint.
		tateti changePlayerToX
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:29:36'!
addPieceToO: aPoint
	piecesO add:aPoint! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:29:57'!
addPieceToX: aPoint
	piecesX add:aPoint! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:31:34'!
changePlayerToO
	state:=NextPlayerIsO with:self! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:31:42'!
changePlayerToX
	state:=NextPlayerIsX with:self! !
!Tateti methodsFor: 'initialization' stamp: 'AS 11/2/2020 01:31:55' prior: 50886442!
initializeGame
piecesX:=Bag new.
piecesO:=Bag new.
state:=NextPlayerIsX with:self.
nextPlayer :=$X.! !
!TatetiState class methodsFor: 'no messages' stamp: 'AS 11/2/2020 01:33:12'!
with: aTateti
	self new initiliazeWith: aTateti! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:33:51'!
initializeWith: aTateti
	tateti:= aTateti ! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:34:28' prior: 50886482 overrides: 50886431!
addPieceAt: aPoint	

		tateti addPieceToO: aPoint.
		tateti changePlayerToX
	! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:35:03' prior: 50886474 overrides: 50886431!
addPieceAt: aPoint

		tateti addPieceToX: aPoint.
		tateti changePlayerToO
	! !

----SNAPSHOT----(2 November 2020 01:35:56) 1er Parcial v1.image priorSource: 17754453!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:37:28' prior: 50886448!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size + piecesO size)>=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 01:37:43'!
ERROR!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 01:37:43'!
ERROR!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 01:37:43'!
ERROR!
!TatetiState class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:38:29' prior: 50886510!
with: aTateti
	self new initializeWith: aTateti! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 01:38:37'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 01:38:41'!
ERROR!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 01:38:41'!
ERROR!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 01:38:41'!
ERROR!
!TatetiState class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:39:48' prior: 50886565!
with: aTateti
	^self new initializeWith: aTateti! !

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 01:39:56'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 01:39:58'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 01:40:00'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 01:40:03'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 01:40:09'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 01:40:12'!
FAILURE!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 01:40:12'!
FAILURE!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 01:40:12'!
ERROR!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:41:13' prior: 50878816!
nextPlayerIsO
	^state nextPlayerIsO! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:41:40' prior: 50878740!
nextPlayerIsX
	^state nextPlayerIsX! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:09'!
nextPlayerIsO
	self shouldBeImplemented ! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:14'!
nextPlayerIsX
	self shouldBeImplemented ! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:33' overrides: 50886622!
nextPlayerIsO
	^true! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:41' overrides: 50886626!
nextPlayerIsX
	^false! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:53' overrides: 50886622!
nextPlayerIsO
	^false! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:42:59' overrides: 50886626!
nextPlayerIsX
	^true! !

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 01:43:04'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 01:43:07'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 01:43:10'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 01:43:13'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 01:43:15'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 01:43:51'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 01:43:56'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 01:43:58'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 01:43:58'!
FAILURE!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 01:43:59'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 01:43:59'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 01:43:59'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 01:43:59'!
PASSED!
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:47:34'!
movePieceAt: aPoint to:  anotherPoint
	self subclassResponsibility ! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:47:40' prior: 50886622!
nextPlayerIsO
	self subclassResponsibility ! !
!TatetiState methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:47:45' prior: 50886626!
nextPlayerIsX
	self subclassResponsibility ! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:48:20' overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:48:27' overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:53:44' prior: 50886778 overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint

	
		tateti checkPlayerXHasPieceAt: aPoint .
						
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:54:25' prior: 50886783 overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint

	
		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:55:41'!
removePieceFromX: aPoint
piecesX remove: aPoint! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:56:03'!
removePieceFromO: aPoint
piecesO remove: aPoint! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:56:49'!
checkPlayerXHasPieceAt: aPoint .! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:57:30' prior: 50886809!
checkPlayerXHasPieceAt: aPoint
	((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 01:57:42'!
checkPlayerOHasPieceAt: aPoint
	((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:57:59' prior: 50886793 overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 01:58:26' prior: 50886773 overrides: 50886757!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:00:00' prior: 50886264!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((piecesX size + piecesO size)<6)  ifTrue:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	state movePieceAt: aPoint to: anotherPoint ! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:00:03' prior: 50886849!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	((piecesX size + piecesO size)<6)  ifTrue:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:00:10'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:00:14'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:00:21'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:00:58'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:01:34'!
PASSED!

!classRemoval: #GameIsOver stamp: 'AS 11/2/2020 02:03:30'!
TatetiState subclass: #GameIsOver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:03:32'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:03:33'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:03:33'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:03:33'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:06:08' prior: 50886537!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	(piecesX+piecesO includes: aPoint) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size + piecesO size)>=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:06:11'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:06:11'!
ERROR!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:06:11'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:06:11'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:06:11'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:06:11'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:06:11'!
ERROR!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:06:12'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:06:12'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:06:12'!
ERROR!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:06:22' prior: 50887424!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	((piecesX size + piecesO size)>=6)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:08:56'!
addingPhaseIsOver

	^ (piecesX size + piecesO size)>=6! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:08:56' prior: 50887521!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:10:03' prior: 50886876!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifTrue:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	state movePieceAt: aPoint to: anotherPoint .! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:10:12' prior: 50887544!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifFalse:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:10:26' prior: 50887589!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self checkPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:10:37' prior: 50887562!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	((Array with: 1@2
		with: 2@1
		with: 3@2
		with: 2@3) includes: aPoint ) ifTrue:
		[
			(aPoint fourNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]				
		
		] ifFalse:
		[
			(aPoint eightNeighbors includes: anotherPoint) 			ifFalse:
			[
				self error: self class DestinationNotANeighbourErrorDescription 
			]	
		]
	.

	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:10:40'!
PASSED!

Object subclass: #Casillero
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Casillero category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:18:49'!
Object subclass: #Casillero
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

Object subclass: #TatetiBoardSlot
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiBoardSlot category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:22:08'!
Object subclass: #TatetiBoardSlot
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classRemoval: #Casillero stamp: 'AS 11/2/2020 02:22:16'!
Object subclass: #Casillero
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiBoardSlot subclass: #SlotCenteredInTheMiddleOfABorder
	instanceVariableNames: 'tateti'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiBoardSlot subclass: #SlotCenteredInTheMiddleOfABorder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #SlotCenteredInTheMiddleOfABorder category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:22:55'!
TatetiBoardSlot subclass: #SlotCenteredInTheMiddleOfABorder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

Object subclass: #TatetiBoardSlot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiBoardSlot category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:23:00'!
Object subclass: #TatetiBoardSlot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

TatetiBoardSlot subclass: #SlotInACornerOrTheMiddle
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #SlotInACornerOrTheMiddle category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:23:25'!
TatetiBoardSlot subclass: #SlotInACornerOrTheMiddle
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classRenamed: #TatetiBoardSlot as: #TatetiPiece stamp: 'AS 11/2/2020 02:27:40'!
Smalltalk renameClassNamed: #TatetiBoardSlot as: #TatetiPiece!

!classRenamed: #SlotCenteredInTheMiddleOfABorder as: #PieceInTheMiddleOfABorder stamp: 'AS 11/2/2020 02:28:04'!
Smalltalk renameClassNamed: #SlotCenteredInTheMiddleOfABorder as: #PieceInTheMiddleOfABorder!

!classRenamed: #SlotInACornerOrTheMiddle as: #PiecesInTheCornerOrTheMiddle stamp: 'AS 11/2/2020 02:28:19'!
Smalltalk renameClassNamed: #SlotInACornerOrTheMiddle as: #PiecesInTheCornerOrTheMiddle!
!TatetiPiece class methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:32:36'!
canHandle: aPoint
	self subclassResponsibility ! !
!PieceInTheMiddleOfABorder class methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:32:46' overrides: 50887824!
canHandle: aPoint
	self subclassResponsibility ! !
!PieceInTheMiddleOfABorder class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:34:39' prior: 50887830 overrides: 50887824!
canHandle: aPoint
"1+2=3,2+1=3, 3+2=5, 2+3=5"
	^(aPoint x+aPoint y)  odd! !
!PieceInTheMiddleOfABorder class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:36:17' prior: 50887836 overrides: 50887824!
canHandle: aPoint
	^(Array with: 1@2
		     with: 2@1
		     with: 3@2
		     with: 2@3) includes: aPoint.! !
!PiecesInTheCornerOrTheMiddle class methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:37:33' overrides: 50887824!
canHandle: aPoint
	^(Array with: 1@1
		     with: 1@3
		     with: 3@1
		     with: 3@3
		     with: 2@2
		) includes: aPoint.! !
!PiecesInTheCornerOrTheMiddle class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:38:05' prior: 50887850 overrides: 50887824!
canHandle: aPoint
	^(Array with: 1@1
		     with: 1@3
		     with: 3@1
		     with: 3@3
		     with: 2@2
		) includes: aPoint.! !

Object subclass: #TatetiPiece
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #TatetiPiece category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 02:39:35'!
Object subclass: #TatetiPiece
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!
!TatetiPiece class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:40:30'!
for: aPoint
	 ! !
!TatetiPiece class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:43:43' prior: 50887877!
for: aPoint
	^ (self allSubclasses detect: [:aClass | aClass canHandle: aPoint ]) with: aPoint! !
!TatetiPiece class methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:44:43'!
with: aPoint
	^self new initializeWith: aPoint ! !
!TatetiPiece methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:45:17'!
initializeWith: aPoint.
	position:= aPoint ! !
!PieceInTheMiddleOfABorder methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:47:22'!
assertIsNeighbourOf: aPoint! !
!TatetiPiece methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:47:40'!
assertIsNeighbourOf: aPoint
	self subclassResponsibility ! !
!PiecesInTheCornerOrTheMiddle methodsFor: 'no messages' stamp: 'AS 11/2/2020 02:47:53' overrides: 50887900!
assertIsNeighbourOf: aPoint! !
!PieceInTheMiddleOfABorder methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:49:53' prior: 50887896 overrides: 50887900!
assertIsNeighbourOf: aPoint

	(position eightNeighbors includes: aPoint) 			ifFalse:
			[
				self error: Tateti DestinationNotANeighbourErrorDescription 
			]	! !
!PieceInTheMiddleOfABorder methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:50:09' prior: 50887911 overrides: 50887900!
assertIsNeighbourOf: aPoint

	(position fourNeighbors includes: aPoint) 			ifFalse:
			[
				self error: Tateti DestinationNotANeighbourErrorDescription 
			]	! !
!PiecesInTheCornerOrTheMiddle methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 02:50:22' prior: 50887906 overrides: 50887900!
assertIsNeighbourOf: aPoint

	(position eightNeighbors includes: aPoint) 			ifFalse:
			[
				self error: Tateti DestinationNotANeighbourErrorDescription 
			]	! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:51:55' prior: 50887625!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	
	

	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:51:58'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:51:58'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 02:54:28' prior: 50887939!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self checkPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 02:54:36'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 02:54:37'!
PASSED!

----SNAPSHOT----(2 November 2020 02:55:06) 1er Parcial v1.image priorSource: 17756239!
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 03:33:16'!
assertPointIsInBounds: aPoint

	(aPoint between: 1@1  and: 3@3 ) ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		
! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 03:33:16' prior: 50887607!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	self assertPointIsInBounds: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 03:33:16' prior: 50888042!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!methodRemoval: Tateti #checkPointIsInBounds: stamp: 'AS 11/2/2020 03:33:16'!
checkPointIsInBounds: aPoint

	(aPoint between: 1@1  and: 3@3 ) ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		
!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 03:33:18'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 03:33:19'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 03:33:19'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 03:33:19'!
PASSED!

----SNAPSHOT----(2 November 2020 03:33:38) 1er Parcial v1.image priorSource: 17807778!

----SNAPSHOT----(2 November 2020 03:49:39) 1er Parcial v1.image priorSource: 17812194!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 04:12:45'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 04:12:45'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 04:12:46'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 04:12:46'!
PASSED!
!TatetiPiece class methodsFor: 'instance creation' stamp: 'AS 11/2/2020 05:11:21' prior: 50887881!
for: aPoint
	^ (self allSubclasses detect: [:aClass | aClass canHandle: aPoint ]) with: aPoint! !
!TatetiPiece class methodsFor: 'instance creation' stamp: 'AS 11/2/2020 05:13:32' prior: 50888374!
for: aPoint
	^ (self allSubclasses detect: [:aClass | aClass canHandle: aPoint ]ifNone: [ self error: Tateti outsideOfBoundsErrorDescription. ]) with: aPoint! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 05:13:36'!
PASSED!

----SNAPSHOT----(2 November 2020 05:13:48) 1er Parcial v1.image priorSource: 17812282!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/2/2020 05:14:17' prior: 50886504!
initializeGame
piecesX:=Bag new.
piecesO:=Bag new.
state:=NextPlayerIsX with:self.! !

Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!classDefinition: #Tateti category: #'Ta-Te-Ti' stamp: 'AS 11/2/2020 05:14:25'!
Object subclass: #Tateti
	instanceVariableNames: 'piecesX piecesO state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ta-Te-Ti'!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 05:14:27'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 05:17:35'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 05:17:35'!
PASSED!
!TatetiPiece methodsFor: 'comparator' stamp: 'AS 11/2/2020 05:18:53' overrides: 16881029!
= aPiece
^position = aPiece position! !
!TatetiPiece methodsFor: 'accessing' stamp: 'AS 11/2/2020 05:19:29'!
position
^position! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 05:19:36'!
PASSED!

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@1)!

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@2) !

!methodRemoval: TatetiPiece #= stamp: 'AS 11/2/2020 05:21:21'!
= aPiece
^position = aPiece position!

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@2) !

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@2) !

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@1) !
!TatetiPiece methodsFor: 'comparator' stamp: 'AS 11/2/2020 05:22:10' overrides: 16881029!
= aPiece
^position = aPiece position! !

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@1) !

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@2)  !

(TatetiPiece for: 1@1)=(TatetiPiece for: 3@1)   !

(TatetiPiece for: 3@1)=(TatetiPiece for: 3@1)   !

TatetiPiece for: 1@0!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 05:44:20' prior: 50879746!
outsideOfBoundsErrorDescription
	^'piece can not be outside the bounds of the board'.! !

----SNAPSHOT----(2 November 2020 05:49:28) 1er Parcial v1.image priorSource: 17818363!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 05:54:22' prior: 50888155!
addPieceAt: aPoint 
	|aPiece|

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].

	aPiece:=TatetiPiece for: aPoint.
						

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 05:54:30'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 05:54:30'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 05:59:34' prior: 50888173!
movePieceAt: aPoint to:  anotherPoint
	|aPiece|
	
	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	
	aPiece:=TatetiPiece for: aPoint.			
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:14'!
FAILURE!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:00:14'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:14'!
FAILURE!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:14'!
ERROR!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:00:29'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:30'!
FAILURE!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:00:30'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:30'!
FAILURE!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:00:30'!
ERROR!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:00:43'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:00:45'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:00:47'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:00:51'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:00:52'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:00:54'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:00:55'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:00:58'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:00:59'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:01:01'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:01:02'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:01:05'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:01:08'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:01:09'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:01:11'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:01:14'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:01:16'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:01:18'!
FAILURE!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:01:18'!
FAILURE!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:01:18'!
ERROR!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 05:59:34' prior: 50888897!
movePieceAt: aPoint to:  anotherPoint
	|aPiece|
	
	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	
	aPiece:=TatetiPiece for: aPoint.			
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 03:33:16' prior: 50889171!
movePieceAt: aPoint to:  anotherPoint

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	(TatetiPiece for: aPoint) assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:03:27'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:03:34'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:03:34'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:16:01' prior: 50889188!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:16:09'!
PASSED!

----SNAPSHOT----(2 November 2020 06:18:31) 1er Parcial v1.image priorSource: 17828440!
!TatetiState methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:21:05'!
move: aPoint to:  anotherPoint
	self subclassResponsibility ! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:21:05'!
move: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:21:05' overrides: 50889433!
move: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:21:05' overrides: 50889433!
move: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50885101!
test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti move: 1@3 to: 2@3.
	tateti move: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50885992!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti move: 1@1 to: 2@3.]  raise: Error withMessageText:  Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50885154!
test24MovingPiecesLeavesOriginalSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti move: 1@1 to: 1@2.
	tateti move: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50886007!
test13CanNotMovePieceToOutsideOfBoundsLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti move: 1@1 to: 0@1.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50884281!
test20CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti move: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50885977!
test15piecesCenteredInTheBordersCannotMoveDiagonally
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti move: 1@2 to: 2@1.]  raise: Error withMessageText: Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50886022!
test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti move: 2@1 to: 3@1.]  raise: Error withMessageText:  Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50885002!
test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti move: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50884735!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti move: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .
	
	tateti move: 2@1 to: 1@1.
	
	self assert: tateti nextPlayerIsX .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50886241!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti move: 2@2 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50889327!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPoint to: anotherPoint .! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:21:05' prior: 50889438!
move: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPoint to: anotherPoint .! !

!methodRemoval: TatetiState #movePieceAt:to: stamp: 'AS 11/2/2020 06:21:05'!
movePieceAt: aPoint to:  anotherPoint
	self subclassResponsibility !

!methodRemoval: Tateti #movePieceAt:to: stamp: 'AS 11/2/2020 06:21:05'!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPoint to: anotherPoint .!

!methodRemoval: NextPlayerIsO #movePieceAt:to: stamp: 'AS 11/2/2020 06:21:05'!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.!

!methodRemoval: NextPlayerIsX #movePieceAt:to: stamp: 'AS 11/2/2020 06:21:05'!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:22:22'!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPoint to: anotherPoint .! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:22:22'!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !
!TatetiState methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:22:22'!
movePieceAt: aPoint to:  anotherPoint
	self subclassResponsibility ! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:22:22' overrides: 50889717!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:22' prior: 50889606!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 2@2 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:22' prior: 50889517!
test13CanNotMovePieceToOutsideOfBoundsLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 0@1.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription .! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:22' prior: 50889636!
move: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889474!
test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@3 to: 2@3.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889504!
test24MovingPiecesLeavesOriginalSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889546!
test15piecesCenteredInTheBordersCannotMoveDiagonally
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@2 to: 2@1.]  raise: Error withMessageText: Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889489!
test14CanNotMovePieceToNotNeighbourLocation
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 2@3.]  raise: Error withMessageText:  Tateti DestinationNotANeighbourErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889591!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .
	
	tateti movePieceAt: 2@1 to: 1@1.
	
	self assert: tateti nextPlayerIsX .! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889561!
test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error withMessageText:  Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889531!
test20CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889577!
test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:22:23' prior: 50889691!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .! !

!methodRemoval: Tateti #move:to: stamp: 'AS 11/2/2020 06:22:23'!
move: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state movePieceAt: aPoint to: anotherPoint .!

!methodRemoval: NextPlayerIsX #move:to: stamp: 'AS 11/2/2020 06:22:23'!
move: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.!

!methodRemoval: TatetiState #move:to: stamp: 'AS 11/2/2020 06:22:23'!
move: aPoint to:  anotherPoint
	self subclassResponsibility !

!methodRemoval: NextPlayerIsO #move:to: stamp: 'AS 11/2/2020 06:22:23'!
move: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.!
!TatetiState methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:22:53'!
move: aPoint to:  anotherPoint
	self subclassResponsibility ! !

!methodRemoval: TatetiState #movePieceAt:to: stamp: 'AS 11/2/2020 06:22:53'!
movePieceAt: aPoint to:  anotherPoint
	self subclassResponsibility !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:23:50' overrides: 50889951!
move: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.! !

!methodRemoval: NextPlayerIsO #movePieceAt:to: stamp: 'AS 11/2/2020 06:23:50'!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerOHasPieceAt: aPoint .			
		tateti removePieceFromO: aPoint.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.!
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:24:24' overrides: 50889951!
move: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !

!methodRemoval: NextPlayerIsX #movePieceAt:to: stamp: 'AS 11/2/2020 06:24:24'!
movePieceAt: aPoint to:  anotherPoint

		tateti checkPlayerXHasPieceAt: aPoint .			
		tateti removePieceFromX: aPoint.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:24:55' prior: 50889897!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPoint to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:25:05'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:25:05'!
PASSED!
!TatetiState methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:26:27' prior: 50889951!
move: aPiece to:  anotherPoint
	self subclassResponsibility ! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:28:07' prior: 50889961 overrides: 50890099!
move: aPiece to:  anotherPoint

		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		tateti addPieceToO: anotherPoint.
		tateti changePlayerToX.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:28:41' prior: 50886487!
addPieceToO: aPiece
	piecesO add:aPiece! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:28:52' prior: 50886491!
addPieceToX: aPiece
	piecesX add:aPiece! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:30:25'!
checkPlayerOHas: aPiece
	((piecesO includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:30:43' prior: 50890121!
checkPlayerOHas: aPiece
	((piecesO includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !

!methodRemoval: Tateti #checkPlayerOHasPieceAt: stamp: 'AS 11/2/2020 06:31:43'!
checkPlayerOHasPieceAt: aPoint
	((piecesO includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:33:04'!
checkPlayerXHas: aPiece
	((piecesX includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !

!methodRemoval: Tateti #checkPlayerXHasPieceAt: stamp: 'AS 11/2/2020 06:33:13'!
checkPlayerXHasPieceAt: aPoint
	((piecesX includes: aPoint)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].!
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:33:56' prior: 50889978 overrides: 50890099!
move: aPiece to:  anotherPoint

		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		tateti addPieceToX: anotherPoint.
		tateti changePlayerToO.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:34:12'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:34:12'!
PASSED!
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:34:59' prior: 50890105 overrides: 50890099!
move: aPiece to:  aPoint

		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		tateti addPieceToO: aPoint.
		tateti changePlayerToX.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:35:09' prior: 50890161 overrides: 50890099!
move: aPiece to:  aPoint

		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		tateti addPieceToX: aPoint.
		tateti changePlayerToO.! !
!TatetiState methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:35:45' prior: 50890099!
move: aPiece to:  aPoint
	self subclassResponsibility ! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:41:53' prior: 50889995!
movePieceAt: aPoint to:  anotherPoint
	|aPiece anotherPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPiece to: anotherPoint .! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 06:42:17' prior: 50890278!
movePieceAt: aPoint to:  anotherPoint
	|aPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	self assertPointIsInBounds: anotherPoint.				
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPiece to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 06:42:22'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 06:42:22'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 06:42:22'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 06:42:22'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 06:42:22'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 06:42:22'!
PASSED!
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:47:21' prior: 50886521 overrides: 50886431!
addPieceAt: aPoint	
	|aPiece|
		aPiece :=TatetiPiece for: aPoint.
		tateti addPieceToO: aPiece.
		tateti changePlayerToX
	! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:47:49' prior: 50886528 overrides: 50886431!
addPieceAt: aPoint
|aPiece|
		aPiece :=TatetiPiece for: aPoint.
		tateti addPieceToX: aPiece.
		tateti changePlayerToO
	! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:48:53' prior: 50890256 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti addPieceToO: aPiece.
		tateti changePlayerToX.! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:48:58' prior: 50890416 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti addPieceToO: anotherPiece.
		tateti changePlayerToX.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:49:28' prior: 50890265 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		tateti addPieceToX: aPoint.
		tateti changePlayerToO.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 06:49:59' prior: 50890438 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti addPieceToX: anotherPiece.
		tateti changePlayerToO.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:52:27' prior: 50886805!
removePieceFromO: aPiece
piecesO remove: aPiece! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:52:44' prior: 50886801!
removePieceFromX: aPiece
piecesX remove: aPiece! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:54:58'!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:54:58' prior: 50883306!
hasPlayerOWon

	^(self winningConfigurations includes: piecesO).
	
	! !
!Tateti methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 06:54:58' prior: 50883301!
hasPlayerXWon

	^(self winningConfigurations includes: piecesX).
	
	! !

!methodRemoval: Tateti #winningPositions stamp: 'AS 11/2/2020 06:54:58'!
winningPositions
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: 1@1 with: 1@2 with: 1@3).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:56:07' prior: 50890466!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: 2@1 with: 2@2 with: 2@3).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:56:40' prior: 50890518!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: 3@1 with: 3@2 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:58:13' prior: 50890541!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: 1@1 with: 2@1 with: 3@1).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:58:39' prior: 50890566!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: 1@2 with: 2@2 with: 3@2).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:59:09' prior: 50890592!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:59:30' prior: 50890620!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@3) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: 1@3 with: 2@3 with: 3@3).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 06:59:56' prior: 50890650!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@3) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: 1@1 with: 2@2 with: 3@3).
	winningPositions add: (Bag with: 1@3 with: 2@2 with: 3@1).
	
	^winningPositions.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 07:00:23' prior: 50890683!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@3) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@1)).
	^winningPositions.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:00:34'!
FAILURE!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 07:00:34'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 07:00:34'!
ERROR!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 07:00:34'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 07:02:10' prior: 50888793!
addPieceAt: aPoint 

	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
					

	((piecesX includes: aPoint) or: (piecesO includes: aPoint)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 07:02:43'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 07:02:44'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:02:48'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:02:48'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:02:48'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:03:56'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:03:56'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:19'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:22'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:22'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:23'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:42'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:54'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:54'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:04:54'!
ERROR!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 07:07:51' prior: 50890839!
addPieceAt: aPoint 
	|aPiece|
	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	
	aPiece	:= TatetiPiece for: aPoint		.

	((piecesX includes: aPiece) or: (piecesO includes: aPiece)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:08:13'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:08:13'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:08:17'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:08:17'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:08:17'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:30'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:30'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:30'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 07:09:48' prior: 50886090!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error withMessageText:  Tateti alreadyTakenErrorDescription. ! !

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:51'!
ERROR!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:51'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:09:51'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 07:10:07' prior: 50890953!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error withMessageText:  Tateti alreadyTakenErrorDescription. ! !

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:33:46'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:33:46'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:33:46'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 07:33:58' prior: 50890974!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error. ! !

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:34:01'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:34:01'!
FAILURE!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:34:01'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 07:34:05' prior: 50890995!
test03CanNotAddPieceToBoardInAlreadyTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 2@3.
	self should:  [tateti addPieceAt: 2@3]  raise: Error withMessageText:  Tateti alreadyTakenErrorDescription. ! !

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 07:34:12'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 07:34:16'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 07:34:20'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 07:34:22'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 07:34:24'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 07:34:26'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 07:34:28'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 07:34:30'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 07:34:32'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 07:34:35'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 07:34:38'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 07:34:40'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 07:34:42'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:34:44'!
FAILURE!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:34:44'!
FAILURE!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:34:44'!
ERROR!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:34:49'!
FAILURE!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:34:49'!
FAILURE!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:34:49'!
ERROR!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:34:53'!
FAILURE!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:34:53'!
FAILURE!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:34:53'!
ERROR!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 07:34:56'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 07:35:00'!
ERROR!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 07:35:00'!
ERROR!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 07:35:00'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:35:03'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:35:03'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:35:03'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:35:07'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:35:07'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:35:07'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 07:35:10'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 07:35:10'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 07:35:11'!
ERROR!

(TatetiPiece for: 1@1)=(TatetiPiece for: 1@1)!

|bag|
bag:=Bag with:(TatetiPiece for: 1@1).
bag includes: (TatetiPiece for: 1@1) .!

|bag|
bag:=Bag with:(TatetiPiece for: 1@1).
bag includes: (TatetiPiece for: 1@2) . !

bag includes: (TatetiPiece for: 1@1) .  !
!TatetiPiece methodsFor: 'comparator' stamp: 'AS 11/2/2020 07:51:16' overrides: 16896471!
== aPiece
^position = aPiece position! !

|bag|
bag:=Bag with:(TatetiPiece for: 1@1).
bag includes: (TatetiPiece for: 1@1) .  !

!methodRemoval: TatetiPiece #== stamp: 'AS 11/2/2020 07:51:39'!
== aPiece
^position = aPiece position!
!Tateti methodsFor: 'initialization' stamp: 'AS 11/2/2020 07:52:45' prior: 50888478!
initializeGame
piecesX:=OrderedCollection new.
piecesO:=OrderedCollection new.
state:=NextPlayerIsX with:self.! !

|bag|
bag:=Bag with:(TatetiPiece for: 1@1).
bag includes: (TatetiPiece for: 1@1) .  !

|bag|
bag:=Bag with:(TatetiPiece for: 1@1).
bag includes: (TatetiPiece for: 1@1) .  !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 07:53:37'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 07:53:40'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 07:53:41'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 07:53:43'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 07:53:45'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 07:53:47'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 07:53:49'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 07:53:50'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 07:53:52'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 07:53:54'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 07:53:56'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 07:53:58'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 07:53:59'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 07:54:02'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 07:54:04'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 07:54:05'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 07:54:07'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 07:54:08'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:54:10'!
FAILURE!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:54:10'!
FAILURE!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 07:54:10'!
ERROR!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:54:15'!
FAILURE!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:54:15'!
FAILURE!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 07:54:15'!
ERROR!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:54:21'!
FAILURE!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:54:21'!
FAILURE!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 07:54:21'!
ERROR!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 07:54:24'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 07:54:29'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:54:34'!
FAILURE!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:54:34'!
FAILURE!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 07:54:34'!
ERROR!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:54:39'!
FAILURE!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:54:39'!
FAILURE!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 07:54:39'!
ERROR!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 07:54:44'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 07:54:51'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 08:26:26' prior: 50890718!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@3) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@1)).
	^winningPositions.! !
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:27:03' prior: 50890493!
hasPlayerXWon

	^(self winningConfigurations includes: (piecesX asBag)).
	
	! !
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:27:10' prior: 50890487!
hasPlayerOWon

	^(self winningConfigurations includes: (piecesO asBag)).
	
	! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 08:27:12'!
FAILURE!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 08:27:12'!
FAILURE!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 08:27:12'!
FAILURE!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:27:12'!
FAILURE!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 08:27:12'!
FAILURE!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 08:27:12'!
PASSED!

Tateti!

OrderedCollection!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 08:32:41'!
FAILURE!
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:34:10' prior: 50891344!
hasPlayerXWon

	^(self winningConfigurations includes: (piecesX sort)).
	
	! !

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:34:13'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:34:13'!
ERROR!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:34:13'!
ERROR!
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:34:24' prior: 50891445!
hasPlayerXWon

	^(self winningConfigurations includes: (piecesX)).
	
	! !
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:34:31' prior: 50891349!
hasPlayerOWon

	^(self winningConfigurations includes: (piecesO)).
	
	! !

orderedCollection includes: (TatetiPiece for: 1@1) .  !

orderedCollection includes: (TatetiPiece for: 1@1) .  !

|orderedCollection|
orderedCollection:=OrderedCollection with:(TatetiPiece for: 1@1).
orderedCollection includes: (TatetiPiece for: 1@1) . !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 08:51:03'!
winningConfigurationsInclude: aPieceCollection

	1 to: 3 do: [:i|
		((aPieceCollection includes: (TatetiPiece for: 1@i))
		and:(aPieceCollection includes: (TatetiPiece for: 2@i))
		and:(aPieceCollection includes: (TatetiPiece for: 3@i))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: i@1))
		and:(aPieceCollection includes: (TatetiPiece for: i@2))
		and:(aPieceCollection includes: (TatetiPiece for: i@3))) ifTrue: [^true].
		].
	^false.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 08:52:34' prior: 50891482!
winningConfigurationsInclude: aPieceCollection

	1 to: 3 do: [:i|
		((aPieceCollection includes: (TatetiPiece for: 1@i))
		and:(aPieceCollection includes: (TatetiPiece for: 2@i))
		and:(aPieceCollection includes: (TatetiPiece for: 3@i))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: i@1))
		and:(aPieceCollection includes: (TatetiPiece for: i@2))
		and:(aPieceCollection includes: (TatetiPiece for: i@3))) ifTrue: [^true].
		].
	
		((aPieceCollection includes: (TatetiPiece for: 1@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 3@3))) ifTrue: [^true].
	
	^false.! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 08:52:58' prior: 50891499!
winningConfigurationsInclude: aPieceCollection

	1 to: 3 do: [:i|
		((aPieceCollection includes: (TatetiPiece for: 1@i))
		and:(aPieceCollection includes: (TatetiPiece for: 2@i))
		and:(aPieceCollection includes: (TatetiPiece for: 3@i))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: i@1))
		and:(aPieceCollection includes: (TatetiPiece for: i@2))
		and:(aPieceCollection includes: (TatetiPiece for: i@3))) ifTrue: [^true].
		].
	
		((aPieceCollection includes: (TatetiPiece for: 1@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 3@3))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: 3@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 1@3))) ifTrue: [^true].
	
	^false.! !

!methodRemoval: Tateti #winningConfigurations stamp: 'AS 11/2/2020 08:53:06'!
winningConfigurations
	|winningPositions|
	
	winningPositions := Bag new.
	winningPositions add: (Bag with: (TatetiPiece for: 1@1) with: (TatetiPiece for: 1@2) with: (TatetiPiece for: 1@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 2@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 3@1)with: (TatetiPiece for: 3@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@1) with: (TatetiPiece for: 3@1)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@2)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@2)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@3) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@1)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@3)).
	winningPositions add: (Bag with: (TatetiPiece for: 1@3)with: (TatetiPiece for: 2@2) with: (TatetiPiece for: 3@1)).
	^winningPositions.!
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:53:42' prior: 50891469!
hasPlayerOWon

	^(self winningConfigurationsInclude: piecesO).
	
	! !
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:53:53' prior: 50891464!
hasPlayerXWon

	^(self winningConfigurationsinclude: piecesX).
	
	! !
!Tateti methodsFor: 'access' stamp: 'AS 11/2/2020 08:53:58' prior: 50891591!
hasPlayerXWon

	^(self winningConfigurationsInclude: piecesX).
	
	! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 08:54:02'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 08:54:03'!
PASSED!

----SNAPSHOT----(2 November 2020 08:54:10) 1er Parcial v1.image priorSource: 17848942!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 08:56:20'!
PASSED!

----SNAPSHOT----(2 November 2020 08:56:26) 1er Parcial v1.image priorSource: 17921152!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 09:00:01' prior: 50890296!
movePieceAt: aPoint to:  anotherPoint
	|aPiece|

	(self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPiece to: anotherPoint .! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:00:03'!
PASSED!

!methodRemoval: Tateti #assertPointIsInBounds: stamp: 'AS 11/2/2020 09:00:18'!
assertPointIsInBounds: aPoint

	(aPoint between: 1@1  and: 3@3 ) ifFalse:[
		self error: self class outsideOfBoundsErrorDescription.				
	]
		
!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:00:25'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:00:25'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:08:32'!
test26CanNotMovePieceToTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti alreadyTakenErrorDescription .
! !

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:08:35'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:08:35'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:08:35'!
ERROR!
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 09:09:50' prior: 50878356!
alreadyTakenErrorDescription
	^'pieces can not be placed in a position that is already taken'.! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 09:10:16' prior: 50879814!
DestinationNotANeighbourErrorDescription
	^'Destination is not a neighbour'! !
!Tateti class methodsFor: 'ErrorDescriptions' stamp: 'AS 11/2/2020 09:11:00' prior: 50879631!
positionDoenNotHaveAValidPieceToMoveErrorDescription
	^'There is not a valid piece to move in that position'! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:14:29'!
piecesIncludes: aPiece! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:15:08'!
assertPiecesIncludes: aPiece
		((piecesX includes: aPiece) or: (piecesO includes: aPiece)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:16:54' prior: 50890400 overrides: 50886431!
addPieceAt: aPoint	
	|aPiece|
		aPiece :=TatetiPiece for: aPoint.
		
		tateti assertPiecesIncludes: aPiece.
		
		tateti addPieceToO: aPiece.
		tateti changePlayerToX
	! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:17:36'!
assertPiecesOnBoardDoNotInclude: aPiece
		((piecesX includes: aPiece) or: (piecesO includes: aPiece)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:17:36' prior: 50892026 overrides: 50886431!
addPieceAt: aPoint	
	|aPiece|
		aPiece :=TatetiPiece for: aPoint.
		
		tateti assertPiecesOnBoardDoNotInclude: aPiece.
		
		tateti addPieceToO: aPiece.
		tateti changePlayerToX
	! !

!methodRemoval: Tateti #assertPiecesIncludes: stamp: 'AS 11/2/2020 09:17:37'!
assertPiecesIncludes: aPiece
		((piecesX includes: aPiece) or: (piecesO includes: aPiece)) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].!
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:18:03' prior: 50890408 overrides: 50886431!
addPieceAt: aPoint
|aPiece|
		aPiece :=TatetiPiece for: aPoint.
		
		tateti assertPiecesOnBoardDoNotInclude: aPiece.
		
		tateti addPieceToX: aPiece.
		tateti changePlayerToO
	! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:18:26' prior: 50890447 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		
		tateti assertPiecesOnBoardDoNotInclude: aPiece.
		tateti addPieceToX: anotherPiece.
		tateti changePlayerToO.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:18:31' prior: 50892072 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: aPiece.
		tateti addPieceToX: anotherPiece.
		tateti changePlayerToO.! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:18:46' prior: 50890427 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: aPiece.
		tateti addPieceToO: anotherPiece.
		tateti changePlayerToX.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:18:51'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:18:51'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:18:51'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:18:51'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:19:37' prior: 50891973!
test26CanNotMovePieceToTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	tateti movePieceAt: 1@1 to: 1@2.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti alreadyTakenErrorDescription .
! !

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:19:41'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:19:41'!
FAILURE!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:19:41'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:20:18' prior: 50892205!
test26CanNotMovePieceToTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti alreadyTakenErrorDescription .
! !
!NextPlayerIsO methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:20:57' prior: 50892098 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: anotherPiece.
		tateti addPieceToO: anotherPiece.
		tateti changePlayerToX.! !
!NextPlayerIsX methodsFor: 'add or move pieces' stamp: 'AS 11/2/2020 09:21:17' prior: 50892085 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti checkPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: anotherPiece.
		tateti addPieceToX: anotherPiece.
		tateti changePlayerToO.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:21:23'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:21:23'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 09:21:47' prior: 50890907!
addPieceAt: aPoint 
	 (self isOver) ifTrue: [self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription .				].
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:21:55'!
PASSED!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:22:01'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:22:01'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:28:11'!
assertGameIsNotOver
		(self isOver) ifTrue: [
			self error: self class canNotAddOrMovePiecesInFinishedGameErrorDescription
			].! !
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 09:28:55' prior: 50892358!
addPieceAt: aPoint 
	 self assertGameIsNotOver.
						
	(self addingPhaseIsOver)  ifTrue:[	
							self error: self class playerCanNotAddFourthPieceErrorDescription 				].

	state addPieceAt: aPoint.! !

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:28:58'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:28:58'!
PASSED!
!Tateti methodsFor: 'move and add pieces' stamp: 'AS 11/2/2020 09:29:11' prior: 50891779!
movePieceAt: aPoint to:  anotherPoint
	|aPiece|

	 self assertGameIsNotOver.
	
	(self addingPhaseIsOver )  ifFalse:[	
							self error: self class NotEnoughPiecesToMoveErrorDescription 				].
	
	aPiece:=(TatetiPiece for: aPoint).
	
	 aPiece assertIsNeighbourOf: anotherPoint .
	
	state move: aPiece to: anotherPoint .! !

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:29:16'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:29:16'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:31:18'!
assertPlayerOHas: aPiece
	((piecesO includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !
!NextPlayerIsO methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:31:18' prior: 50892244 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti assertPlayerOHas: aPiece .			
		tateti removePieceFromO: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: anotherPiece.
		tateti addPieceToO: anotherPiece.
		tateti changePlayerToX.! !

!methodRemoval: Tateti #checkPlayerOHas: stamp: 'AS 11/2/2020 09:31:18'!
checkPlayerOHas: aPiece
	((piecesO includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:32:14'!
assertPlayerXHas: aPiece
	((piecesX includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].! !
!NextPlayerIsX methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:32:14' prior: 50892257 overrides: 50890273!
move: aPiece to:  aPoint
|anotherPiece|
		tateti assertPlayerXHas: aPiece .			
		tateti removePieceFromX: aPiece.
		anotherPiece :=TatetiPiece for: aPoint.
		tateti assertPiecesOnBoardDoNotInclude: anotherPiece.
		tateti addPieceToX: anotherPiece.
		tateti changePlayerToO.! !

!methodRemoval: Tateti #checkPlayerXHas: stamp: 'AS 11/2/2020 09:32:14'!
checkPlayerXHas: aPiece
	((piecesX includes: aPiece)) ifFalse:[	
							self error: self class positionDoenNotHaveAValidPieceToMoveErrorDescription .				].!

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:32:20'!
PASSED!

----SNAPSHOT----(2 November 2020 09:32:25) 1er Parcial v1.image priorSource: 17923987!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:34:22' prior: 50892014!
piecesIncludes: aPiece
^((piecesX includes: aPiece) or: (piecesO includes: aPiece))! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:34:48' prior: 50892034!
assertPiecesOnBoardDoNotInclude: aPiece
		(self piecesIncludes: aPiece) ifTrue:[	
							self error: self class alreadyTakenErrorDescription.				].! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:34:53'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:34:53'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:35:04' prior: 50892838!
piecesIncludes: aPiece
	^((piecesX includes: aPiece) or: (piecesO includes: aPiece))! !
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:49:25' prior: 50891522!
winningConfigurationsInclude: aPieceCollection

	1 to: 3 do: [:i|
		((aPieceCollection includes: (TatetiPiece for: 1@i))
		and:(aPieceCollection includes: (TatetiPiece for: 2@i))
		and:(aPieceCollection includes: (TatetiPiece for: 3@i))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: i@1))
		and:(aPieceCollection includes: (TatetiPiece for: i@2))
		and:(aPieceCollection includes: (TatetiPiece for: i@3))) ifTrue: [^true].
		].
	
	
		
		((aPieceCollection includes: (TatetiPiece for: 3@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 1@3))) ifTrue: [^true].
	
	^false.! !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:49:29'!
PASSED!

!testRun: #TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:49:29'!
PASSED!
!Tateti methodsFor: 'private' stamp: 'AS 11/2/2020 09:49:41' prior: 50892947!
winningConfigurationsInclude: aPieceCollection

	1 to: 3 do: [:i|
		((aPieceCollection includes: (TatetiPiece for: 1@i))
		and:(aPieceCollection includes: (TatetiPiece for: 2@i))
		and:(aPieceCollection includes: (TatetiPiece for: 3@i))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: i@1))
		and:(aPieceCollection includes: (TatetiPiece for: i@2))
		and:(aPieceCollection includes: (TatetiPiece for: i@3))) ifTrue: [^true].
		].
	
		((aPieceCollection includes: (TatetiPiece for: 1@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 3@3))) ifTrue: [^true].
		
		((aPieceCollection includes: (TatetiPiece for: 3@1))
		and:(aPieceCollection includes: (TatetiPiece for: 2@2))
		and:(aPieceCollection includes: (TatetiPiece for: 1@3))) ifTrue: [^true].
	
	^false.! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:51:23'!
test29CanNotMovePieceToTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti alreadyTakenErrorDescription .
! !

!methodRemoval: TatetiTest #test26CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 09:51:23'!
test26CanNotMovePieceToTakenSpot
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 3@2.
	tateti addPieceAt: 3@3.
	self should:  [tateti movePieceAt: 1@1 to: 1@2.]  raise: Error withMessageText: Tateti alreadyTakenErrorDescription .
!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:51:30'!
test28CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 2@2 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
! !

!methodRemoval: TatetiTest #test25CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 09:51:30'!
test25CanNotMovePiecesBeforeThereAre6OnTheBoard
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self should:  [tateti movePieceAt: 2@2 to: 1@2.]  raise: Error withMessageText: Tateti NotEnoughPiecesToMoveErrorDescription.
!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:51:36'!
test27MovingPiecesLeavesOriginalSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .! !

!methodRemoval: TatetiTest #test24MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 09:51:36'!
test24MovingPiecesLeavesOriginalSpotFree
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	tateti movePieceAt: 3@2 to: 3@3.
	
	self deny: tateti isOver .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:51:47'!
test26MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@3 to: 2@3.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .! !

!methodRemoval: TatetiTest #test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 09:51:47'!
test23MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@3 to: 2@3.
	tateti movePieceAt: 2@2 to: 3@3.
	
	self assert: tateti hasPlayerOWon .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:51:55'!
test25MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .! !

!methodRemoval: TatetiTest #test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 09:51:55'!
test22MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 2@2 to: 1@2.
	
	self assert: tateti hasPlayerXWon .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:52:05'!
test24MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .
	
	tateti movePieceAt: 2@1 to: 1@1.
	
	self assert: tateti nextPlayerIsX .! !

!methodRemoval: TatetiTest #test21MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 09:52:05'!
test21MovingPiecesChangeNextPlayer
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@2.
	
	tateti movePieceAt: 1@1 to: 1@2.
	self assert: tateti nextPlayerIsO .
	
	tateti movePieceAt: 2@1 to: 1@1.
	
	self assert: tateti nextPlayerIsX .!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:52:17'!
test23CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test20CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 09:52:17'!
test20CanNotMovePieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti movePieceAt: 3@1 to: 3@2 ]  raise: Error description: Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:52:25'!
test22CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error withMessageText:  Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. ! !

!methodRemoval: TatetiTest #test19CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 09:52:25'!
test19CanNotAddPieceInFinishedGame
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	
	self should:  [tateti addPieceAt: 3@3 .]  raise: Error withMessageText:  Tateti canNotAddOrMovePiecesInFinishedGameErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:57:57'!
test21GameIsFinishedWhen3PiecesOfPlayerOAreInADiagonal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow stamp: 'AS 11/2/2020 09:57:57'!
test18GameIsFinishedWhen3PiecesOfPlayerOAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 09:59:39'!
test18GameIsFinishedWhen3PiecesOfPlayerXAreInAColumn
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@1.
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:00:26'!
test17GameIsFinishedWhen3PiecesOfPlayerXAreInAColumn
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 10:00:26'!
test17GameIsFinishedWhen3PiecesOfPlayerXAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 1@3.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:00:42'!
test18GameIsFinishedWhen3PiecesOfPlayerXAreInARow
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@1.
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerXAreInAColumn stamp: 'AS 11/2/2020 10:00:42'!
test18GameIsFinishedWhen3PiecesOfPlayerXAreInAColumn
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@1.
	self assert:  tateti isOver . !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:04:02'!
test19GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperLeftToBottomRightDiagonal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@3.
	
	self assert:  tateti isOver . ! !

!testRun: #TatetiTest #test19GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperLeftToBottomRightDiagonal stamp: 'AS 11/2/2020 10:04:06'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:04:36'!
test20GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperRightToBottomLeftDiagonal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@3.
	
	self assert:  tateti isOver . ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:05:24' prior: 50893406!
test20GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperRightToBottomLeftDiagonal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 3@1.
	
	self assert:  tateti isOver . ! !

!testRun: #TatetiTest #test20GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperRightToBottomLeftDiagonal stamp: 'AS 11/2/2020 10:05:29'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:06:21'!
test21GameIsFinishedWhen3PiecesOfPlayerOAreConsecutive
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . ! !

!methodRemoval: TatetiTest #test21GameIsFinishedWhen3PiecesOfPlayerOAreInADiagonal stamp: 'AS 11/2/2020 10:06:21'!
test21GameIsFinishedWhen3PiecesOfPlayerOAreInADiagonal
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 3@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 3@3.
	tateti addPieceAt: 1@3.
	
	self assert:  tateti isOver . !

!testRun: #TatetiTest #test01gameIsCreatedWithoutPiecesOnBoard stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test02CanAddPiecesToBoardAndBoardIsNotEmpty stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test03CanNotAddPieceToBoardInAlreadyTakenSpot stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test08PlayerXStartsPlaying stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test09PlayerOPlaysAfterX stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test10PlayerXPlaysAfterO stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test11PlayersCanNotAddMoreThan6PiecesOnTheBoardInTotal stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test13CanNotMovePieceToOutsideOfBoundsLocation stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test14CanNotMovePieceToNotNeighbourLocation stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test15piecesCenteredInTheBordersCannotMoveDiagonally stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test16GameIsNotFinishedWhen3PiecesFromDIfferentPlayersAreInARow stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test17GameIsFinishedWhen3PiecesOfPlayerXAreInAColumn stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test18GameIsFinishedWhen3PiecesOfPlayerXAreInARow stamp: 'AS 11/2/2020 10:06:26'!
PASSED!

!testRun: #TatetiTest #test19GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperLeftToBottomRightDiagonal stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test20GameIsFinishedWhen3PiecesOfPlayerXAreInAnUpperRightToBottomLeftDiagonal stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test21GameIsFinishedWhen3PiecesOfPlayerOAreConsecutive stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test22CanNotAddPieceInFinishedGame stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test23CanNotMovePieceInFinishedGame stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test24MovingPiecesChangeNextPlayer stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test25MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereXwins stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test26MovingPiecesOccupiesDestinationSpotCreatingGameOverConfigurationsWhereOwins stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test27MovingPiecesLeavesOriginalSpotFree stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test28CanNotMovePiecesBeforeThereAre6OnTheBoard stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

!testRun: #TatetiTest #test29CanNotMovePieceToTakenSpot stamp: 'AS 11/2/2020 10:06:27'!
PASSED!

----SNAPSHOT----(2 November 2020 10:08:50) 1er Parcial v1.image priorSource: 17957911!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:24:32'!
ShouldRaiseOutsideOfBooundsWhenAddingPieceAt: aPoint
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: aPoint.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:24:52'!
ShouldRaiseOutsideOfBoundsWhenAddingPieceAt: aPoint
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: aPoint.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !

!methodRemoval: TatetiTest #ShouldRaiseOutsideOfBooundsWhenAddingPieceAt: stamp: 'AS 11/2/2020 10:24:52'!
ShouldRaiseOutsideOfBooundsWhenAddingPieceAt: aPoint
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: aPoint.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:25:31' prior: 50886081!
test04CanNotAddPieceBelowTheBoard
self ShouldRaiseOutsideOfBoundsWhenAddingPieceAt: 4@3! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:25:49'!
shouldRaiseOutsideOfBoundsWhenAddingPieceAt: aPoint
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: aPoint.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. ! !
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:25:49' prior: 50893591!
test04CanNotAddPieceBelowTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 4@3! !

!methodRemoval: TatetiTest #ShouldRaiseOutsideOfBoundsWhenAddingPieceAt: stamp: 'AS 11/2/2020 10:25:49'!
ShouldRaiseOutsideOfBoundsWhenAddingPieceAt: aPoint
|tateti|
	tateti:=Tateti createGame.
	self should:  [tateti addPieceAt: aPoint.]  raise: Error withMessageText:  Tateti outsideOfBoundsErrorDescription. !

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:25:55'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:26:21' prior: 50893607!
test04CanNotAddPieceBelowTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 3@3! !

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:26:23'!
FAILURE!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:26:23'!
FAILURE!

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:26:23'!
ERROR!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:26:27' prior: 50893626!
test04CanNotAddPieceBelowTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 4@3! !

!testRun: #TatetiTest #test04CanNotAddPieceBelowTheBoard stamp: 'AS 11/2/2020 10:26:29'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:26:40' prior: 50886071!
test05CanNotAddPieceOnTheRightOfTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 3@4! !

!testRun: #TatetiTest #test05CanNotAddPieceOnTheRightOfTheBoard stamp: 'AS 11/2/2020 10:26:42'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:26:52' prior: 50886062!
test06CanNotAddPieceOnTheLeftOfTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 2@0! !

!testRun: #TatetiTest #test06CanNotAddPieceOnTheLeftOfTheBoard stamp: 'AS 11/2/2020 10:26:54'!
PASSED!
!TatetiTest methodsFor: 'as yet unclassified' stamp: 'AS 11/2/2020 10:27:15' prior: 50886053!
test07CanNotAddPieceAboveOfTheBoard
self shouldRaiseOutsideOfBoundsWhenAddingPieceAt: 0@2! !

!testRun: #TatetiTest #test07CanNotAddPieceAboveOfTheBoard stamp: 'AS 11/2/2020 10:27:18'!
PASSED!
!TatetiTest methodsFor: 'tateti tests' stamp: 'AS 11/2/2020 10:31:05'!
test12PlayerCanNotMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error withMessageText:  Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.! !

!methodRemoval: TatetiTest #test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces stamp: 'AS 11/2/2020 10:31:05'!
test12PlayerTriesToMovePieceFromASlotWhereThereIsNotOneOfHisPieces
|tateti|
	tateti:=Tateti createGame.
	tateti addPieceAt: 1@1.
	tateti addPieceAt: 1@2.
	tateti addPieceAt: 1@3.
	tateti addPieceAt: 2@1.
	tateti addPieceAt: 2@2.
	tateti addPieceAt: 2@3.
	self should:  [tateti movePieceAt: 2@1 to: 3@1.]  raise: Error withMessageText:  Tateti positionDoenNotHaveAValidPieceToMoveErrorDescription.!

----SNAPSHOT----(2 November 2020 10:31:51) 1er Parcial v1.image priorSource: 17981073!

----SNAPSHOT----(2 November 2020 10:39:16) 1er Parcial v1.image priorSource: 17985916!